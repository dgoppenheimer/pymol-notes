[
{
	"uri": "https://dgoppenheimer.github.io/pymol-notes/introduction/building-this-site/",
	"title": "Building this site",
	"tags": [],
	"description": "",
	"content": "I already have Hugo installed. I installed it using MacPorts.\nCreate a project cd ~/Sites hugo new site pymol-notes Install the theme I want to use the Learn theme for Hugo. It is a theme designed for documentation. It looks nice and is functional.\nThe theme\u0026rsquo;s repository is: https://github.com/matcornic/hugo-theme-learn.git.\ncd pymol-notes git init git submodule add https://github.com/matcornic/hugo-theme-learn.git themes/hugo-theme-learn echo \u0026#39;theme = \u0026#34;hugo-theme-learn\u0026#34;\u0026#39; \u0026gt;\u0026gt; config.toml Configure the theme Open config.toml and add the following:\n# Change the default theme to be use when building the site with Hugo theme = \u0026#34;hugo-theme-learn\u0026#34; # Change the title title = \u0026#34;PyMOL Notes\u0026#34; # For search functionality [outputs] home = [ \u0026#34;HTML\u0026#34;, \u0026#34;RSS\u0026#34;, \u0026#34;JSON\u0026#34;] Create a chapter page hugo new --kind chapter introduction/_index.md Create some content hugo new introduction/building-this-site.md Spin up the site hugo server  When you run hugo server, Hugo will build the site in and serve the pages from memory.\n Go to http://localhost:1313.\nSuccess!\nIf you want the site to be built in and served from the public directory, then run hugo server --renderToDisk. If you just want to build the site in the public directory, then run hugo.\n "
},
{
	"uri": "https://dgoppenheimer.github.io/pymol-notes/introduction/hosting-the-site-on-github/",
	"title": "Hosting the Site on Github",
	"tags": [],
	"description": "",
	"content": "I more-or-less followed the instructions provided on the Hugo website.\nI already have a GitHub account. I\u0026rsquo;ll create a new public repository called pymol-notes, which will be the repository for my project. I\u0026rsquo;ll deploy my site from the gh-pages branch of my project.\nUpdate the local repository for the site.\ngit add . git status On branch master No commits yet Changes to be committed: (use \u0026#34;git rm --cached \u0026lt;file\u0026gt;...\u0026#34; to unstage) new file: .gitignore new file: .gitmodules new file: archetypes/default.md new file: config.toml new file: content/introduction/.DS_Store new file: content/introduction/_index.md new file: content/introduction/building-this-site.md new file: themes/hugo-theme-learn Commit the files.\ngit commit -a -m \u0026#34;first commit of site\u0026#34; Oops. I need to untrack the .DS_Store files.\ngit rm --cached content/introduction/.DS_Store echo \u0026#34;.DS_Store\u0026#34; \u0026gt;\u0026gt; .gitignore Preparations for gh-pages branch These steps only need to be done once. Replace upstream with the name of your remote; e.g., origin:\nMake sure your baseURL key-value in your site\u0026rsquo;s config.toml configuration file reflects the full URL of your GitHub pages repository if you’re using the default GitHub Pages URL (e.g., .github.io//) and not a custom domain.\n For this project, in config.toml, change baseURL = \u0026quot;http://example.org/\u0026quot; to\nbaseURL = \u0026#34;https://dgoppenheimer.github.io/pymol-notes/\u0026#34; Add the public folder to .gitignore Add the public folder to the .gitignore in your project root.\necho \u0026#34;public\u0026#34; \u0026gt;\u0026gt; .gitignore Initialize your gh-pages branch Initialize your local gh-pages branch as an empty orphan branch:\ngit checkout --orphan gh-pages git reset --hard git commit --allow-empty -m \u0026#34;Initializing gh-pages branch\u0026#34; git remote add origin git@github.com:dgoppenheimer/pymol-notes.git git push origin gh-pages git checkout master Build and deploy your project Checkout the gh-pages branch into your public directory using the git worktree feature. This feature allows you to checkout have different branches of the same local repository in different directories.\nrm -rf public git worktree add -B gh-pages public origin/gh-pages Regenerate the site using the hugo command and commit the generated files on the gh-pages branch.\nhugo cd public git add --all git commit -m \u0026#34;Publishing to gh-pages\u0026#34; cd .. Or as a script, commit-gh-pages-files.sh\nhugo cd public \u0026amp;\u0026amp; git add --all \u0026amp;\u0026amp; git commit -m \u0026#34;Publishing to gh-pages\u0026#34; \u0026amp;\u0026amp; cd .. Push the changes to the gh-pages branch to the GitHub repo.\ngit push origin gh-pages Set gh-pages as your publish branch To publish the gh-pages branch as your site, you need to tweak some setting in GitHub.\n Log into your account using a web browser. Go to Settings → GitHub Pages. From Source, select gh-pages branch and then Save.  The site should be visible at https://dgoppenheimer.github.io/pymol-notes/.\nSuccess!\nTo automate the publishing to gh-pages process, create the following script: publish_to_ghpages.sh. Put this script in your project directory.\n#!/bin/sh if [ \u0026#34;`git status -s`\u0026#34; ] then echo \u0026#34;The working directory is dirty. Please commit any pending changes.\u0026#34; exit 1; fi echo \u0026#34;Deleting old publication\u0026#34; rm -rf public mkdir public git worktree prune rm -rf .git/worktrees/public/ echo \u0026#34;Checking out gh-pages branch into public\u0026#34; git worktree add -B gh-pages public origin/gh-pages echo \u0026#34;Removing existing files\u0026#34; rm -rf public/* echo \u0026#34;Generating site\u0026#34; hugo echo \u0026#34;Updating gh-pages branch\u0026#34; cd public \u0026amp;\u0026amp; git add --all \u0026amp;\u0026amp; git commit -m \u0026#34;Publishing to gh-pages (publish.sh)\u0026#34; #echo \u0026#34;Pushing to github\u0026#34; #git push --all Make the script executable.\nchmod +x publish_to_ghpages.sh Run the script with ./publish_to_ghpages.sh. Either uncomment the git push lines, or manually run git push --all. Wait a few minutes and the site should be live on GitHub.\n"
},
{
	"uri": "https://dgoppenheimer.github.io/pymol-notes/introduction/",
	"title": "Introduction",
	"tags": [],
	"description": "",
	"content": "Chapter 1 Introduction I built this site to keep track of my notes when using PyMOL.\n"
},
{
	"uri": "https://dgoppenheimer.github.io/pymol-notes/",
	"title": "PyMOL Notes",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://dgoppenheimer.github.io/pymol-notes/categories/",
	"title": "Categories",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://dgoppenheimer.github.io/pymol-notes/tags/",
	"title": "Tags",
	"tags": [],
	"description": "",
	"content": ""
}]