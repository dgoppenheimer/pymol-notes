<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>PyMOL Notes</title>
    <link>https://dgoppenheimer.github.io/pymol-notes/</link>
    <description>Recent content on PyMOL Notes</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 26 Sep 2020 19:43:33 -0400</lastBuildDate><atom:link href="https://dgoppenheimer.github.io/pymol-notes/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Building this site</title>
      <link>https://dgoppenheimer.github.io/pymol-notes/introduction/building-this-site/</link>
      <pubDate>Tue, 22 Sep 2020 13:50:44 -0400</pubDate>
      
      <guid>https://dgoppenheimer.github.io/pymol-notes/introduction/building-this-site/</guid>
      <description>I already have Hugo installed. I installed it using MacPorts.
Create a project cd ~/Sites hugo new site pymol-notes Install the theme I want to use the Learn theme for Hugo. It is a theme designed for documentation. It looks nice and is functional.
This theme has tons of useful features. Check out the Hugo Learn Theme documentation.
The theme&amp;rsquo;s repository is: https://github.com/matcornic/hugo-theme-learn.git.
cd pymol-notes git init git submodule add https://github.</description>
    </item>
    
    <item>
      <title>Protein-Ligand Complex Tutorial</title>
      <link>https://dgoppenheimer.github.io/pymol-notes/md-simulations/gromacs-simulations/protein-ligand-tutorial/</link>
      <pubDate>Thu, 14 Oct 2021 15:53:20 -0400</pubDate>
      
      <guid>https://dgoppenheimer.github.io/pymol-notes/md-simulations/gromacs-simulations/protein-ligand-tutorial/</guid>
      <description>This tutorial is from this website.
  Download 3HTB from the RCSB website.
  View the structure in VMD.
  cd ../gromacs-work/gromacs-prot-ligand-tutorial mol new 3htb.pdb mol modstyle 0 0 licorice A few of the amino acids have 2 conformers that are present in the structure.
 Strip out the crystal waters, PO4, and BME.  awk &amp;#39;!(/HETATM/ &amp;amp;&amp;amp; /HOH/ || /HETATM/ &amp;amp;&amp;amp; /BME/ || /HETATM/ &amp;amp;&amp;amp; /PO4/)&amp;#39; 3htb.</description>
    </item>
    
    <item>
      <title>Hosting the Site on Github</title>
      <link>https://dgoppenheimer.github.io/pymol-notes/introduction/hosting-the-site-on-github/</link>
      <pubDate>Wed, 23 Sep 2020 19:04:15 -0400</pubDate>
      
      <guid>https://dgoppenheimer.github.io/pymol-notes/introduction/hosting-the-site-on-github/</guid>
      <description>I more-or-less followed the instructions provided on the Hugo website.
I already have a GitHub account. I&amp;rsquo;ll create a new public repository called pymol-notes, which will be the repository for my project. I&amp;rsquo;ll deploy my site from the gh-pages branch of my project.
Update the local repository for the site.
git add . git status On branch master No commits yet Changes to be committed: (use &amp;#34;git rm --cached &amp;lt;file&amp;gt;...&amp;#34; to unstage) new file: .</description>
    </item>
    
    <item>
      <title>Analyze Trajectories in VMD</title>
      <link>https://dgoppenheimer.github.io/pymol-notes/md-simulations/gromacs-simulations/analyze-trajectories-in-vmd/</link>
      <pubDate>Sun, 17 Oct 2021 13:45:18 -0400</pubDate>
      
      <guid>https://dgoppenheimer.github.io/pymol-notes/md-simulations/gromacs-simulations/analyze-trajectories-in-vmd/</guid>
      <description>Useful information can be found on the following websites:
Analyze your trajectory
 Start VMD, open the Tk console and load the .gro file of the trajectory to analyze.  cd /Users/davidoppenheimer/Dropbox\ \(UFL\)/GROMACS/gromacs-prot-ligand-tutorial mol new md_0_10.gro  Then load the trajectory file into the previously loaded molecule.  In the VMD Main window, select the molecule. Go to File â†’ Load Data into Molecule and choose the .xtc trajectory to load from the file browser.</description>
    </item>
    
    <item>
      <title>Creating a Logo</title>
      <link>https://dgoppenheimer.github.io/pymol-notes/introduction/creating-a-logo/</link>
      <pubDate>Tue, 22 Sep 2020 13:50:44 -0400</pubDate>
      
      <guid>https://dgoppenheimer.github.io/pymol-notes/introduction/creating-a-logo/</guid>
      <description>I&amp;rsquo;ll create my own logo to replace the beautiful GRAV logo.
Open PyMOL.
fetch 3G6M, mol, async=0 extract caf1, /mol//A/CFF`427 h_add set valence, 0 hide everything, caf1 create molball, caf1 create molstick, caf1 show spheres, molball set sphere_scale, 0.25 show sticks, molstick set stick_radius, 0.15 disable mol color hydrogen, elem H and molball color wheat, elem C and molball color salmon, elem O and molball color lightblue, elem N and molball color skyblue, molstick set orthoscopic, off set field_of_view, 60 set ray_opaque_background, off viewport 640, 640 png caffeine-logo.</description>
    </item>
    
    <item>
      <title>Automatic Build and Deploy using GitHub Actions</title>
      <link>https://dgoppenheimer.github.io/pymol-notes/introduction/automatic-build-and-deploy/</link>
      <pubDate>Fri, 09 Oct 2020 20:22:44 -0400</pubDate>
      
      <guid>https://dgoppenheimer.github.io/pymol-notes/introduction/automatic-build-and-deploy/</guid>
      <description>I&amp;rsquo;m using GitHub Pages to host this site. I started by building the site locally, and pushing the /public directory to my gh-pages branch on GitHub. (See these instructions on the Hugo website.) GitHub provides native support for building Jekyll sites, but does not have native support for Hugo. Nonetheless, using GitHub Actions, I can build and deploy my Hugo site automatically when I push new content to the main branch of my GitHub repository.</description>
    </item>
    
    <item>
      <title>PyMOL Shortcuts</title>
      <link>https://dgoppenheimer.github.io/pymol-notes/pymol-tips/pymol-shortcuts/</link>
      <pubDate>Sun, 07 Nov 2021 19:49:28 -0500</pubDate>
      
      <guid>https://dgoppenheimer.github.io/pymol-notes/pymol-tips/pymol-shortcuts/</guid>
      <description>This page describes the installation and use of the pymolshortucs built by B.H.M. Mooers and described in Mooers (2020) 1.
Install the date time module The pymolshortcuts.py script has a shortcut to timestamp filenames produced by PyMOL. To use this, the date time module needs to be installed. Because I have MacPorts on my system, I&amp;rsquo;ll used the suggested MacPorts installation instructions.
In a terminal window, type the following command:</description>
    </item>
    
    <item>
      <title>Lab.00 Software</title>
      <link>https://dgoppenheimer.github.io/pymol-notes/molecular-modeling-tutorials/lab.00-software/</link>
      <pubDate>Thu, 04 Nov 2021 11:40:43 -0400</pubDate>
      
      <guid>https://dgoppenheimer.github.io/pymol-notes/molecular-modeling-tutorials/lab.00-software/</guid>
      <description>This tutorial was taken from the Cloud-based Tutorials on Structural Bioinformatics Github repository.</description>
    </item>
    
    <item>
      <title>Making It Rain</title>
      <link>https://dgoppenheimer.github.io/pymol-notes/md-simulations/making-it-rain/</link>
      <pubDate>Fri, 29 Oct 2021 19:20:18 -0400</pubDate>
      
      <guid>https://dgoppenheimer.github.io/pymol-notes/md-simulations/making-it-rain/</guid>
      <description>Making it rain 1 is a front end for running molecular dynamics simulations using cloud-based resources. It makes use of the OpenMM toolkit, Google Colab framework, and Jupyter notebooks.
Before I start running MD simulations in Colab, I will start with some Colab-Jupyter tutorials outlined in the paper by Engelberger et al. (2021) 2. These tutorials are available from the Cloud-based Tutorials on Structural Bioinformatics github repository.
PyRosetta notebooks PyRosetta Google Drive Setup First follow these instructions:</description>
    </item>
    
    <item>
      <title>Installing JupyterLab</title>
      <link>https://dgoppenheimer.github.io/pymol-notes/jupyter-notebooks/installing-jupyter/</link>
      <pubDate>Fri, 29 Oct 2021 16:17:12 -0400</pubDate>
      
      <guid>https://dgoppenheimer.github.io/pymol-notes/jupyter-notebooks/installing-jupyter/</guid>
      <description>I&amp;rsquo;ve decided to give JupyterLab a try. Follow the installation instructions on the Jupyter website. This will allow me to test the notebooks locally. If all works well, I&amp;rsquo;ll try to repeat it on Google Colab and UF JupyterHub.
Install conda First I need to install conda.
 Download the Miniconda installer. Check the installer hash:  shasum -a 256 ~/Downloads/Miniconda3-latest-MacOSX-x86_64.sh An easier way to compare the hashes:
cd ~/Downloads echo &amp;#34;8fa371ae97218c3c005cd5f04b1f40156d1506a9bd1d5c078f89d563fd416816 Miniconda3-latest-MacOSX-x86_64.</description>
    </item>
    
    <item>
      <title>Hugo Basics</title>
      <link>https://dgoppenheimer.github.io/pymol-notes/introduction/hugo-basics/</link>
      <pubDate>Fri, 29 Oct 2021 15:48:44 -0400</pubDate>
      
      <guid>https://dgoppenheimer.github.io/pymol-notes/introduction/hugo-basics/</guid>
      <description>Here I&amp;rsquo;ll note some basic hugo commands so I don&amp;rsquo;t have to keep searching the web. The chapter and page commands are from the Hugo-theme-learn Documentation.
Create a new chapter:
hugo new --kind chapter &amp;lt;chapter-name&amp;gt;/_index.md This creates a chapter page with the following front matter:
+++ title = &amp;#34;{{ replace .Name &amp;#34;-&amp;#34; &amp;#34; &amp;#34; | title }}&amp;#34; date = {{ .Date }} weight = 5 chapter = true pre = &amp;#34;&amp;lt;b&amp;gt;X.</description>
    </item>
    
    <item>
      <title>MD Notes</title>
      <link>https://dgoppenheimer.github.io/pymol-notes/md-simulations/md-notes/</link>
      <pubDate>Fri, 29 Oct 2021 11:36:52 -0400</pubDate>
      
      <guid>https://dgoppenheimer.github.io/pymol-notes/md-simulations/md-notes/</guid>
      <description>Common software GROMACS CHARMM CHARMM Tutorials
AMBER NAMD ABINIT for free energy calculations
DL_POLY
Making it rain: Cloud-based molecular simulations for everyone
Force fields Force fields for small molecules There is a recent paper that covers this topic by Lin and MacKerell 1, Force fields for small molecules.
OPLS-All-Atom (OPLS-AA)
OPLS3
CHARMM General force field (CGenFF) see ParamChem
General AMBER Force Field (GAFF)
Merck Molecular Force Field (MMFF)
GROMOS
Drude Polarizable Force Field for Small Organic Molecules</description>
    </item>
    
    <item>
      <title>VMD Scripting</title>
      <link>https://dgoppenheimer.github.io/pymol-notes/vmd-notes/vmd-scripting/</link>
      <pubDate>Sun, 17 Oct 2021 17:02:04 -0400</pubDate>
      
      <guid>https://dgoppenheimer.github.io/pymol-notes/vmd-notes/vmd-scripting/</guid>
      <description>VMD scripting is handy for executing command that you do often&amp;ndash;like preparing a molecule for a figure, or for carrying out certain analyses. When I use PyMOL, I have a set of scripts for coloring atoms and defining various representations so I don&amp;rsquo;t have to repeat these by hand each time I need them. In addition, there are useful scripts available for analyzing protein structure and trajectories.
Scripting Resources Here are some web resources for scripting in VMD:</description>
    </item>
    
    <item>
      <title>Customizing the Site</title>
      <link>https://dgoppenheimer.github.io/pymol-notes/introduction/customizing-the-site/</link>
      <pubDate>Fri, 09 Oct 2020 19:08:25 -0400</pubDate>
      
      <guid>https://dgoppenheimer.github.io/pymol-notes/introduction/customizing-the-site/</guid>
      <description>Removing the copy-to-clipboard button from inline code The copy-to-clipboard button is useful on code blocks, but distracting when attached to the inline code. I thought I could remove it using custom css, so I created a static/css directory in the root of my project and added a custom.css file to contain my overrides. To have hugo see the custom file, add the following to config.toml:
[params] custom_css = [&amp;#34;css/custom.css&amp;#34;] Now I need to figure out what css to override.</description>
    </item>
    
  </channel>
</rss>
